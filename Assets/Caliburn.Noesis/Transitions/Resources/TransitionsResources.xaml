<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Caliburn.Noesis.Assets.Caliburn.Noesis.Platform.Converters"
    xmlns:transitions="clr-namespace:Caliburn.Noesis.Transitions">

    <Style TargetType="{x:Type transitions:Transitioner}">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type transitions:Transitioner}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="ItemsPresenter" IsItemsHost="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedIndex" Value="-1">
                            <Setter TargetName="ItemsPresenter" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type transitions:TransitioningContentControlBase}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type transitions:TransitioningContentControlBase}">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Content="{TemplateBinding ContentControl.Content}"
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                            RenderTransformOrigin=".5,.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <MatrixTransform x:Name="PART_MatrixTransform" />
                                    <RotateTransform x:Name="PART_RotateTransform" Angle="0" />
                                    <ScaleTransform x:Name="PART_ScaleTransform" ScaleX="1" ScaleY="1" />
                                    <SkewTransform x:Name="PART_SkewTransform" AngleX="0" AngleY="0" />
                                    <TranslateTransform x:Name="PART_TranslateTransform" X="0" Y="0" />
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type transitions:TransitioningContentControlBase}}" TargetType="{x:Type transitions:TransitioningContentControl}" />

    <Style BasedOn="{StaticResource {x:Type transitions:TransitioningContentControlBase}}" TargetType="{x:Type transitions:TransitionerItem}">
        <Style.Resources>
            <converters:NotZeroConverter x:Key="NotZeroConverter" />
        </Style.Resources>
        <Setter Property="RenderTransformOrigin" Value=".5,.5" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Visibility" Value="Hidden" />
        <Style.Triggers>
            <Trigger Property="State" Value="Current">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding State, RelativeSource={RelativeSource Self}}" Value="Previous" />
                    <Condition Binding="{Binding Opacity, RelativeSource={RelativeSource Self}, Converter={StaticResource NotZeroConverter}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>