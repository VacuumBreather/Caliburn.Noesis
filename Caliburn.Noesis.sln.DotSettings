<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeEditing/Unity/AdditionalFileLayout/Pattern/@EntryValue">&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"
          xmlns:unity="urn:schemas-jetbrains-com:member-reordering-patterns-unity"&gt;

    &lt;!-- StyleCop Unity Classes Layout --&gt;

    &lt;TypePattern DisplayName="StyleCop Unity Classes Layout" RemoveRegions="All" Priority="150"&gt;
        &lt;TypePattern.Match&gt;
            &lt;unity:SerializableClass /&gt;
        &lt;/TypePattern.Match&gt;
        &lt;Region Name="Constants and Fields"&gt;
            &lt;Entry DisplayName="Constants"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Constant" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Static fields"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Field" /&gt;
                        &lt;Static /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Kind Order="Constant Field" /&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Readonly /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Fields"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Field" /&gt;
                        &lt;Not&gt;
                            &lt;unity:SerializedField /&gt;
                        &lt;/Not&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Readonly /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Serialized Fields" Priority="150"&gt;
            &lt;Entry DisplayName="Serialized Fields"&gt;
                &lt;Entry.Match&gt;
                    &lt;unity:SerializedField /&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Constructors and Destructors"&gt;
            &lt;Entry DisplayName="Constructors and destructors"&gt;
                &lt;Entry.Match&gt;
                    &lt;Or&gt;
                        &lt;Kind Is="Constructor" /&gt;
                        &lt;Kind Is="Destructor" /&gt;
                    &lt;/Or&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Static /&gt;
                    &lt;Kind Order="Constructor Destructor" /&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Public Events and Delegates"&gt;
            &lt;Entry DisplayName="Delegates"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Delegate" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Public events"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Event" /&gt;
                        &lt;Access Is="Public" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Protected Events"&gt;
            &lt;Entry DisplayName="Protected events"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Event" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Private Events"&gt;
            &lt;Entry DisplayName="Private events"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Event" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Enums"&gt;
            &lt;Entry DisplayName="Enums"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Enum" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Interfaces"&gt;
            &lt;Entry DisplayName="Interfaces"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Interface" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Public Properties"&gt;
            &lt;Entry DisplayName="Public properties"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Property" /&gt;
                        &lt;Access Is="Public" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Protected Properties"&gt;
            &lt;Entry DisplayName="Protected properties"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Property" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Private Properties"&gt;
            &lt;Entry DisplayName="Private properties"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Property" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Public Indexers"&gt;
            &lt;Entry DisplayName="Public indexers"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Indexer" /&gt;
                        &lt;Access Is="Public" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Protected Indexers"&gt;
            &lt;Entry DisplayName="Protected indexers"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Indexer" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Private Indexers"&gt;
            &lt;Entry DisplayName="Private indexers"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Indexer" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="${ImplementsInterface} Implementation" Priority="100"&gt;
            &lt;Region.GroupBy&gt;
                &lt;ImplementsInterface /&gt;
            &lt;/Region.GroupBy&gt;
            &lt;Entry DisplayName="Interface events"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Event" /&gt;
                        &lt;ImplementsInterface /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;ImplementsInterface Immediate="True" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Interface properties"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Property" /&gt;
                        &lt;ImplementsInterface /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;ImplementsInterface Immediate="True" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Interface indexers" Priority="100"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Indexer" /&gt;
                        &lt;ImplementsInterface /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;ImplementsInterface Immediate="True" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Interface methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;ImplementsInterface /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;ImplementsInterface Immediate="True" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Setup and Teardown"&gt;
            &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Tests"&gt;
            &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Public Methods"&gt;
            &lt;Entry DisplayName="Public operators"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Operator" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Public" /&gt;
                            &lt;Access Is="Internal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Virtual /&gt;
                    &lt;Override /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Public methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Public" /&gt;
                            &lt;Access Is="Internal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Virtual /&gt;
                    &lt;Override /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Protected Methods"&gt;
            &lt;Entry DisplayName="Protected Operators"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Operator" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Virtual /&gt;
                    &lt;Override /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Protected Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Virtual /&gt;
                    &lt;Override /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Event Handlers" Priority="100"&gt;
            &lt;Entry DisplayName="Event handlers"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Access Is="Private" /&gt;
                        &lt;HandlesEvent /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Unity Methods" Priority="150"&gt;
            &lt;Entry DisplayName="Unity Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;unity:EventFunction /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;unity:EventFunctionName /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Private Methods"&gt;
            &lt;Entry DisplayName="Private operators"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Operator" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Private methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Nested Types"&gt;
            &lt;Entry DisplayName="Nested structs"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Struct" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Static /&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Nested classes"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Class" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Static /&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Entry DisplayName="All other members" /&gt;
    &lt;/TypePattern&gt;
&lt;/Patterns&gt;
</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Sort_0020Includes/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Sort Includes"&gt;&lt;CppClangTidyCleanupDescriptor llvm-include-order="true" /&gt;&lt;CSCodeStyleAttributes ArrangeTypeAccessModifier="False" ArrangeTypeMemberAccessModifier="False" SortModifiers="False" RemoveRedundantParentheses="False" AddMissingParentheses="False" ArrangeBraces="False" ArrangeAttributes="False" ArrangeArgumentsStyle="False" ArrangeCodeBodyStyle="False" ArrangeVarStyle="False" /&gt;&lt;CssReformatCode&gt;True&lt;/CssReformatCode&gt;&lt;VBReformatCode&gt;True&lt;/VBReformatCode&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;False&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CppRemoveUnusedIncludes&gt;True&lt;/CppRemoveUnusedIncludes&gt;&lt;XAMLCollapseEmptyTags&gt;False&lt;/XAMLCollapseEmptyTags&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=VacuumBreather/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="VacuumBreather"&gt;&lt;AspOptimizeRegisterDirectives&gt;True&lt;/AspOptimizeRegisterDirectives&gt;&lt;HtmlReformatCode&gt;True&lt;/HtmlReformatCode&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;CSRemoveCodeRedundancies&gt;True&lt;/CSRemoveCodeRedundancies&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_BOTH&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;IMPLICIT_WHEN_INITIALIZER_HAS_TYPE&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;IMPLICIT_EXCEPT_PRIMITIVE_TYPES&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSUpdateFileHeader&gt;True&lt;/CSUpdateFileHeader&gt;&lt;VBOptimizeImports&gt;True&lt;/VBOptimizeImports&gt;&lt;VBShortenReferences&gt;True&lt;/VBShortenReferences&gt;&lt;JsInsertSemicolon&gt;True&lt;/JsInsertSemicolon&gt;&lt;JsReformatCode&gt;True&lt;/JsReformatCode&gt;&lt;CssReformatCode&gt;True&lt;/CssReformatCode&gt;&lt;XMLReformatCode&gt;True&lt;/XMLReformatCode&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;Using Directives&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;VBReformatCode&gt;True&lt;/VBReformatCode&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;VBFormatDocComments&gt;True&lt;/VBFormatDocComments&gt;&lt;JsFormatDocComments&gt;True&lt;/JsFormatDocComments&gt;&lt;CssAlphabetizeProperties&gt;True&lt;/CssAlphabetizeProperties&gt;&lt;CSCodeStyleAttributes ArrangeTypeAccessModifier="True" ArrangeTypeMemberAccessModifier="True" SortModifiers="True" RemoveRedundantParentheses="True" AddMissingParentheses="True" ArrangeBraces="True" ArrangeAttributes="True" ArrangeArgumentsStyle="True" ArrangeCodeBodyStyle="True" ArrangeVarStyle="True" ArrangeTrailingCommas="True" ArrangeObjectCreation="True" ArrangeDefaultValue="True" /&gt;&lt;CSEnforceVarKeywordUsageSettings&gt;True&lt;/CSEnforceVarKeywordUsageSettings&gt;&lt;CppAddOverrideSpecifier&gt;True&lt;/CppAddOverrideSpecifier&gt;&lt;CppAddTypenameTemplateKeywords&gt;True&lt;/CppAddTypenameTemplateKeywords&gt;&lt;CppReplaceImportDirective&gt;True&lt;/CppReplaceImportDirective&gt;&lt;CppJoinDeclarationAndAssignmentDescriptor&gt;True&lt;/CppJoinDeclarationAndAssignmentDescriptor&gt;&lt;CppMakeMethodConst&gt;True&lt;/CppMakeMethodConst&gt;&lt;CppMakeMethodStatic&gt;True&lt;/CppMakeMethodStatic&gt;&lt;CppRemoveElseKeyword&gt;True&lt;/CppRemoveElseKeyword&gt;&lt;CppRemoveRedundantMemberInitializerDescriptor&gt;True&lt;/CppRemoveRedundantMemberInitializerDescriptor&gt;&lt;CppRemoveRedundantParentheses&gt;True&lt;/CppRemoveRedundantParentheses&gt;&lt;CppShortenQualifiedName&gt;True&lt;/CppShortenQualifiedName&gt;&lt;CppDeleteRedundantSpecifier&gt;True&lt;/CppDeleteRedundantSpecifier&gt;&lt;CppRemoveStatement&gt;True&lt;/CppRemoveStatement&gt;&lt;CppDeleteRedundantTypenameTemplateKeywords&gt;True&lt;/CppDeleteRedundantTypenameTemplateKeywords&gt;&lt;CppRemoveUnreachableCode&gt;True&lt;/CppRemoveUnreachableCode&gt;&lt;CppRemoveUnusedIncludes&gt;True&lt;/CppRemoveUnusedIncludes&gt;&lt;CppReplaceExpressionWithBooleanConst&gt;True&lt;/CppReplaceExpressionWithBooleanConst&gt;&lt;CppMakeIfConstexpr&gt;True&lt;/CppMakeIfConstexpr&gt;&lt;CppMakePostfixOperatorPrefix&gt;True&lt;/CppMakePostfixOperatorPrefix&gt;&lt;CppChangeSmartPointerToMakeFunction&gt;True&lt;/CppChangeSmartPointerToMakeFunction&gt;&lt;CppReplaceThrowWithRethrowFix&gt;True&lt;/CppReplaceThrowWithRethrowFix&gt;&lt;CppReplaceExpressionWithNullptr&gt;True&lt;/CppReplaceExpressionWithNullptr&gt;&lt;CppSortMemberInitializers&gt;True&lt;/CppSortMemberInitializers&gt;&lt;CppClangTidyCleanupDescriptor android-cloexec-accept="true" android-cloexec-accept4="true" android-cloexec-creat="true" android-cloexec-dup="true" android-cloexec-epoll-create="true" android-cloexec-epoll-create1="true" android-cloexec-fopen="true" android-cloexec-inotify-init="true" android-cloexec-inotify-init1="true" android-cloexec-memfd-create="true" android-cloexec-open="true" android-cloexec-socket="true" boost-use-to-string="true" bugprone-argument-comment="true" bugprone-bool-pointer-implicit-conversion="true" bugprone-copy-constructor-init="true" bugprone-inaccurate-erase="true" bugprone-misplaced-operator-in-strlen-in-alloc="true" bugprone-move-forwarding-reference="true" bugprone-suspicious-memset-usage="true" bugprone-virtual-near-miss="true" cert-dcl03-c="true" cert-dcl21-cpp="true" cppcoreguidelines-pro-bounds-constant-array-index="true" cppcoreguidelines-pro-type-cstyle-cast="true" cppcoreguidelines-pro-type-member-init="true" cppcoreguidelines-pro-type-static-cast-downcast="true" fuchsia-default-arguments="true" google-build-explicit-make-pair="true" google-explicit-constructor="true" google-readability-casting="true" google-readability-redundant-smartptr-get="true" google-readability-todo="true" llvm-header-guard="true" llvm-include-order="true" llvm-twine-local="true" misc-definitions-in-headers="true" misc-macro-parentheses="true" misc-static-assert="true" misc-string-compare="true" misc-string-integer-assignment="true" misc-suspicious-string-compare="true" misc-uniqueptr-reset-release="true" misc-unused-parameters="true" misc-unused-raii="true" modernize-avoid-bind="true" modernize-deprecated-headers="true" modernize-loop-convert="true" modernize-make-shared="true" modernize-make-unique="true" modernize-pass-by-value="true" modernize-raw-string-literal="true" modernize-replace-auto-ptr="true" modernize-replace-random-shuffle="true" modernize-return-braced-init-list="true" modernize-shrink-to-fit="true" modernize-use-auto="true" modernize-use-bool-literals="true" modernize-use-default-member-init="true" modernize-use-emplace="true" modernize-use-equals-default="true" modernize-use-equals-delete="true" modernize-use-noexcept="true" modernize-use-nullptr="true" modernize-use-override="true" modernize-use-using="true" objc-property-declaration="true" performance-faster-string-find="true" performance-inefficient-algorithm="true" performance-inefficient-vector-operation="true" performance-type-promotion-in-math-fn="true" performance-unnecessary-value-param="true" readability-braces-around-statements="true" readability-container-size-empty="true" readability-identifier-naming="true" readability-implicit-bool-conversion="true" readability-inconsistent-declaration-parameter-name="true" readability-misplaced-array-index="true" readability-named-parameter="true" readability-non-const-parameter="true" readability-redundant-smartptr-get="true" readability-redundant-string-cstr="true" readability-redundant-string-init="true" readability-simplify-boolean-expr="true" readability-static-accessed-through-instance="true" readability-uniqueptr-delete-release="true" other-fixits="true" /&gt;&lt;CppReformatCode&gt;True&lt;/CppReformatCode&gt;&lt;FixViolations&gt;False&lt;/FixViolations&gt;&lt;RemoveCodeRedundancies&gt;True&lt;/RemoveCodeRedundancies&gt;&lt;CSArrangeQualifiers&gt;True&lt;/CSArrangeQualifiers&gt;&lt;CSFixBuiltinTypeReferences&gt;True&lt;/CSFixBuiltinTypeReferences&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;IDEA_SETTINGS&gt;&amp;lt;profile version="1.0"&amp;gt;&#xD;
  &amp;lt;option name="myName" value="VacuumBreather" /&amp;gt;&#xD;
&amp;lt;/profile&amp;gt;&lt;/IDEA_SETTINGS&gt;&lt;/Profile&gt;</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/WRAP_LIMIT/@EntryValue">100</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;

    &lt;!-- Non-reorderable types --&gt;

    &lt;TypePattern DisplayName="Non-reorderable types"&gt;
        &lt;TypePattern.Match&gt;
            &lt;Or&gt;
                &lt;And&gt;
                    &lt;Kind Is="Interface" /&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
                &lt;Kind Is="Struct" /&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorder" /&gt;
            &lt;/Or&gt;
        &lt;/TypePattern.Match&gt;
    &lt;/TypePattern&gt;

    &lt;!-- xUnit.net Test Classes --&gt;

    &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;
        &lt;TypePattern.Match&gt;
            &lt;And&gt;
                &lt;Kind Is="Class" /&gt;
                &lt;HasMember&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="True" /&gt;
                    &lt;/And&gt;
                &lt;/HasMember&gt;
            &lt;/And&gt;
        &lt;/TypePattern.Match&gt;

        &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Constructor" /&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;ImplementsInterface Name="System.IDisposable" /&gt;
                    &lt;/And&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;

            &lt;Entry.SortBy&gt;
                &lt;Kind&gt;
                    &lt;Kind.Order&gt;
                        &lt;DeclarationKind&gt;Constructor&lt;/DeclarationKind&gt;
                    &lt;/Kind.Order&gt;
                &lt;/Kind&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;


        &lt;Entry DisplayName="All other members" /&gt;

        &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="false" /&gt;
                    &lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="false" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;

            &lt;Entry.SortBy&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
    &lt;/TypePattern&gt;

    &lt;!-- NUnit Test Fixtures --&gt;

    &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;
        &lt;TypePattern.Match&gt;
            &lt;And&gt;
                &lt;Kind Is="Class" /&gt;
                &lt;Or&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="true" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestFixtureSourceAttribute" Inherited="true" /&gt;
                    &lt;HasMember&gt;
                        &lt;And&gt;
                            &lt;Kind Is="Method" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TestAttribute" Inherited="false" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" Inherited="false" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" Inherited="false" /&gt;
                        &lt;/And&gt;
                    &lt;/HasMember&gt;
                &lt;/Or&gt;
            &lt;/And&gt;
        &lt;/TypePattern.Match&gt;

        &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="true" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="true" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TestFixtureSetUpAttribute" Inherited="true" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TestFixtureTearDownAttribute" Inherited="true" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.OneTimeSetUpAttribute" Inherited="true" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.OneTimeTearDownAttribute" Inherited="true" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;

        &lt;Entry DisplayName="All other members" /&gt;

        &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestAttribute" Inherited="false" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" Inherited="false" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" Inherited="false" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;

            &lt;Entry.SortBy&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
    &lt;/TypePattern&gt;

    &lt;!-- StyleCop Interfaces Layout --&gt;

    &lt;TypePattern DisplayName="StyleCop Interfaces Layout" RemoveRegions="All" Priority="25"&gt;
        &lt;TypePattern.Match&gt;
            &lt;Or&gt;
                &lt;Kind Is="Interface" /&gt;
                &lt;And&gt;
                    &lt;Or&gt;
                        &lt;Kind Is="Class" /&gt;
                        &lt;Kind Is="Struct" /&gt;
                    &lt;/Or&gt;
                    &lt;Not&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Public" /&gt;
                            &lt;Access Is="Internal" /&gt;
                        &lt;/Or&gt;
                    &lt;/Not&gt;
                &lt;/And&gt;
            &lt;/Or&gt;
        &lt;/TypePattern.Match&gt;
        &lt;Entry DisplayName="Constants"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Constant" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Static fields"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Field" /&gt;
                    &lt;Static /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Kind Order="Constant Field" /&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Fields"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Field" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Constructors and destructors"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Constructor" /&gt;
                    &lt;Kind Is="Destructor" /&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Static /&gt;
                &lt;Kind Order="Constructor Destructor" /&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Delegates"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Delegate" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Public events"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Event" /&gt;
                    &lt;Access Is="Public" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public" /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Interface events"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Event" /&gt;
                    &lt;ImplementsInterface /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;ImplementsInterface Immediate="True" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Other events"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Event" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Enums"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Enum" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Interfaces"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Interface" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Public properties"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Property" /&gt;
                    &lt;Access Is="Public" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public" /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Interface properties"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Property" /&gt;
                    &lt;ImplementsInterface /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;ImplementsInterface Immediate="True" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Other properties"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Property" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Public indexers"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Indexer" /&gt;
                    &lt;Access Is="Public" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public" /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Interface indexers" Priority="100"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Indexer" /&gt;
                    &lt;ImplementsInterface /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;ImplementsInterface Immediate="True" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Other indexers"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Indexer" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Public operators"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Operator" /&gt;
                    &lt;Or&gt;
                        &lt;Access Is="Public" /&gt;
                        &lt;Access Is="Internal" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Virtual /&gt;
                &lt;Override /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Public methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                        &lt;Access Is="Public" /&gt;
                        &lt;Access Is="Internal" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Virtual /&gt;
                &lt;Override /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Interface methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;ImplementsInterface /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;ImplementsInterface Immediate="True" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Protected Operators"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Operator" /&gt;
                    &lt;Or&gt;
                        &lt;Access Is="Protected" /&gt;
                        &lt;Access Is="ProtectedInternal" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Virtual /&gt;
                &lt;Override /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Protected Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                        &lt;Access Is="Protected" /&gt;
                        &lt;Access Is="ProtectedInternal" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Virtual /&gt;
                &lt;Override /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Event handlers"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Access Is="Private" /&gt;
                    &lt;HandlesEvent /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Private operators"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Operator" /&gt;
                    &lt;Access Is="Private" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Private methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Access Is="Private" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Nested structs"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Struct" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Static /&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Nested classes"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Class" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Static /&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="All other members" /&gt;
    &lt;/TypePattern&gt;

    &lt;!-- StyleCop Layout --&gt;

    &lt;TypePattern DisplayName="StyleCop Layout" RemoveRegions="All" Priority="25"&gt;
        &lt;TypePattern.Match&gt;
            &lt;Or&gt;
                &lt;Kind Is="Class" /&gt;
                &lt;Kind Is="Struct" /&gt;
            &lt;/Or&gt;
        &lt;/TypePattern.Match&gt;
        &lt;Region Name="Constants and Fields"&gt;
            &lt;Entry DisplayName="Constants"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Constant" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Static fields"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Field" /&gt;
                        &lt;Static /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Kind Order="Constant Field" /&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Readonly /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Fields"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Field" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Readonly /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Constructors and Destructors"&gt;
            &lt;Entry DisplayName="Constructors and destructors"&gt;
                &lt;Entry.Match&gt;
                    &lt;Or&gt;
                        &lt;Kind Is="Constructor" /&gt;
                        &lt;Kind Is="Destructor" /&gt;
                    &lt;/Or&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Static /&gt;
                    &lt;Kind Order="Constructor Destructor" /&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Public Events and Delegates"&gt;
            &lt;Entry DisplayName="Delegates"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Delegate" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Public events"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Event" /&gt;
                        &lt;Access Is="Public" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Protected Events"&gt;
            &lt;Entry DisplayName="Protected events"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Event" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Private Events"&gt;
            &lt;Entry DisplayName="Private events"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Event" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Enums"&gt;
            &lt;Entry DisplayName="Enums"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Enum" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Interfaces"&gt;
            &lt;Entry DisplayName="Interfaces"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Interface" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Public Properties"&gt;
            &lt;Entry DisplayName="Public properties"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Property" /&gt;
                        &lt;Access Is="Public" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Protected Properties"&gt;
            &lt;Entry DisplayName="Protected properties"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Property" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Private Properties"&gt;
            &lt;Entry DisplayName="Private properties"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Property" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Public Indexers"&gt;
            &lt;Entry DisplayName="Public indexers"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Indexer" /&gt;
                        &lt;Access Is="Public" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Protected Indexers"&gt;
            &lt;Entry DisplayName="Protected indexers"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Indexer" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Private Indexers"&gt;
            &lt;Entry DisplayName="Private indexers"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Indexer" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="${ImplementsInterface} Implementation" Priority="100"&gt;
            &lt;Region.GroupBy&gt;
                &lt;ImplementsInterface /&gt;
            &lt;/Region.GroupBy&gt;
            &lt;Entry DisplayName="Interface events"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Event" /&gt;
                        &lt;ImplementsInterface /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;ImplementsInterface Immediate="True" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Interface properties"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Property" /&gt;
                        &lt;ImplementsInterface /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;ImplementsInterface Immediate="True" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Interface indexers" Priority="100"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Indexer" /&gt;
                        &lt;ImplementsInterface /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;ImplementsInterface Immediate="True" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Interface methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;ImplementsInterface /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;ImplementsInterface Immediate="True" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Setup and Teardown"&gt;
            &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Tests"&gt;
            &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Public Methods"&gt;
            &lt;Entry DisplayName="Public operators"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Operator" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Public" /&gt;
                            &lt;Access Is="Internal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Virtual /&gt;
                    &lt;Override /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Public methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Public" /&gt;
                            &lt;Access Is="Internal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Virtual /&gt;
                    &lt;Override /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Protected Methods"&gt;
            &lt;Entry DisplayName="Protected Operators"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Operator" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Virtual /&gt;
                    &lt;Override /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Protected Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;Access Is="Protected" /&gt;
                            &lt;Access Is="ProtectedInternal" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Virtual /&gt;
                    &lt;Override /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Event Handlers" Priority="100"&gt;
            &lt;Entry DisplayName="Event handlers"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Access Is="Private" /&gt;
                        &lt;HandlesEvent /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Private Methods"&gt;
            &lt;Entry DisplayName="Private operators"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Operator" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Private methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Access Is="Private" /&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access /&gt;
                    &lt;Static /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Region Name="Nested Types"&gt;
            &lt;Entry DisplayName="Nested structs"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Struct" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Static /&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
            &lt;Entry DisplayName="Nested classes"&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Class" /&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Static /&gt;
                    &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
                    &lt;Name /&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;
        &lt;Entry DisplayName="All other members" /&gt;
    &lt;/TypePattern&gt;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/FileHeader/FileHeaderText/@EntryValue"></s:String>
	<s:String x:Key="/Default/CodeStyle/XamlStyler/AttributeOrderingRuleGroups/@EntryValue">x:Class
xmlns, xmlns:x
xmlns:*
x:Key, Key, x:Name, Name, x:Uid, Uid, Title
Grid.Row, Grid.RowSpan, Grid.Column, Grid.ColumnSpan, Canvas.Left, Canvas.Top, Canvas.Right, Canvas.Bottom
Width, Height, MinWidth, MinHeight, MaxWidth, MaxHeight
Margin, Padding, HorizontalAlignment, VerticalAlignment, HorizontalContentAlignment, VerticalContentAlignment, Panel.ZIndex
*:*, *
PageSource, PageIndex, Offset, Color, TargetName, Property, Value, StartPoint, EndPoint
mc:Ignorable, d:IsDataSource, d:LayoutOverrides, d:IsStaticText
Storyboard.*, From, To, Duration</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/XamlStyler/AttributesTolerance/@EntryValue">1</s:Int64>
	<s:String x:Key="/Default/CodeStyle/XamlStyler/ConfigPath/@EntryValue"></s:String>
	<s:Boolean x:Key="/Default/CodeStyle/XamlStyler/KeepFirstAttributeOnSameLine/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=xamls/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>